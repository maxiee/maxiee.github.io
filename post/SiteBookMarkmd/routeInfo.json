{"template":"/home/maxiee/Code/Blog/maxiee.github.io/src/pages/post","sharedHashesByProp":{},"data":{"post":{"name":"maxiee.github.io 资源收集功能设计","desc":"年前的时候我会将每周收藏的资源梳理成一篇博客。但是当进行了四周之后，我觉得这种形式既繁琐又低效，有很大的改进空间。下一步我打算再做一个资源导航板块，来解决这个问题。","type":"md","link":"SiteBookMarkmd","create":"2019-02-16","filename":"SiteBookMark.md"},"content":"## 前言\n\n年前的时候我会将每周收藏的资源梳理成一篇博客。但是当进行了四周之后，我觉得这种形式既繁琐又低效，有很大的改进空间。\n\n过年到现在我都在重构 maxiee.github.io，用 react-static 替换了自己编写的框架，添加了“画作”板块。下一步我打算再做一个资源导航板块，来解决这个问题。\n\n本文是我对这一功能的需求文档，文档中只包含需求描述，不包含代码实现。\n\n## 需求收集\n\n我都有哪些需求呢？\n\n- 网络上的资源可以抽象成：uuid、标题、描述、图片、标签列表\n- 每个资源有一个唯一 uuid\n- 资源库是对资源元素的汇集\n- 可以按照标签维度进行检索（不需要支持组合标签过滤）\n- 有一个列表视图\n- 有一个详情页\n- 当列表视图过长时考虑分页\n- 支持社交分享，自动生成分享文案“我在 maxiee.github.io 上发现一个资源 example/example，一个示例工程库，推荐给大家！（网址）\n\n## 数据结构\n\n### model\n\n只有一个 Model，就是资源元素（WebItem）：\n\n| name  | type     | comment        |\n| ----- | -------- | -------------- |\n| id    | string   | uuid           |\n| title | string   | 资源的标题     |\n| desc  | string   | 资源描述、点评 |\n| img   | string   | 图片           |\n| tags  | string[] | 标签列表       |\n| url   | string   | 资源 URL       |\n\n### 存储方式\n\n使用 JSON 数组方式进行存储。\n\n## 资源录入\n\n当看到好的资源的时候，手工编辑 JSON 文件添加进去。\n\n回头可以写 cli、gui 脚本进行添加。\n\n## 静态数据生成\n\nmaxiee.github.io 是一个静态站点，与一般的基于数据库的站点不同。\n\n基于数据库的站点，一般是动态请求数据，向后端发起请求，后端查询数据库，并将数据返回。\n\n而对于静态站点来说，它是不发起数据请求的。而是在网页生成的时候，就考虑所有的请求可能性，将每种可能性所对应的页面都生成出来。（对于 react-static 其实生成的是数据 json 文件）\n\n在我们的资源收集功能中，需要生成的数据有：\n\n- 列表页\n    - 全部列表\n    - 单个 Tag 下列表（多 Tag 组合搜索就不支持了，因为会随 Tag 增多组合式增长，会多生成很多很多页面，降低生成速度，空间增长，不过实际访问速度是不受影响的）\n- ~~详情页~~\n    - 每个资源的详情页\n    - 突然发现也没几个字段，列表中完全足够展示，没必要再搞个详情页了，点击列表 Item 直接跳资源 url 即可\n\n## 总结\n\n至此就完成了资源收集功能的设计，从中可以看出数据结构很简单，页面展示也很直观。\n\n不过这些都是最基本功能，在它们之上还有更高级的功能需要开发：\n\n- 分页（当资源变多后单页数据量太大，需要分页）\n- cli、gui 添加资源脚本\n- 自动生成一周收藏周报\n- 统计功能"},"path":"post/SiteBookMarkmd"}
