{"template":"/home/maxiee/Code/Blog/maxiee.github.io/src/pages/post","sharedHashesByProp":{},"data":{"post":{"name":"多台设备统一管理终端配置","desc":"平时我需要使用多台设备，每台设备都有各自的 terminal，因此我需要对它们的设置文件进行统一管理。","type":"md","link":"MultipleDeviceTerminalConfigmd","create":"2018-07-08","filename":"MultipleDeviceTerminalConfig.md"},"content":"## 介绍\n\n平时我需要使用多台设备，每台设备都有各自的 terminal，因此我需要对它们的设置文件进行统一管理。\n\n## 仓库\n\n首先需要建一个 Git 仓库。我使用 GitLab 建了一个私有仓库。\n\n## 使用哪个配置文件\n\n最终我选择使用 .bash_profile。\n\n## 系统判断\n\n同的系统有一些特定的设置。如何进行判断呢？\n\n通过 [How to detect the OS from a Bash script?](https://stackoverflow.com/questions/394230/how-to-detect-the-os-from-a-bash-script) ，得到以下代码：\n\n``` bash\nif [[ \"$OSTYPE\" == \"linux-gnu\" ]]; then\n        # ...\nelif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n        # Mac OSX\nelif [[ \"$OSTYPE\" == \"cygwin\" ]]; then\n        # POSIX compatibility layer and Linux environment emulation for Windows\nelif [[ \"$OSTYPE\" == \"msys\" ]]; then\n        # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)\nelif [[ \"$OSTYPE\" == \"win32\" ]]; then\n        # I'm not sure this can happen.\nelif [[ \"$OSTYPE\" == \"freebsd\"* ]]; then\n        # ...\nelse\n        # Unknown.\nfi\n```\n\n这个能满足我的需要。我有三个主要的平台：\n\n- Linux：linux-gnu\n- Termux：linux-android\n- macOS：darwin17.0\n\n这样共性和特性的都解决了。\n\n## 配置文件编写\n\n.bash_profile 的具体编写根据自己需要来写。\n\n## Emacs 配置\n\nEmacs 是我在 terminal 下常用的编辑器，因此它的配置也需要同步。\n\nEmacs 遇到一个问题，就是安装的包怎么做到多设备同步？\n\n不能说每次一个新设备，都要手动打开 Emacs 一个个把它们装回来，那就太累了。\n\n我希望的是，第一次打开 Emacs 的时候，它能够自动上 Melpa 上面下载缺少的包。\n\n通过 [What’s the best way to sync emacs settings between machines? ](https://www.reddit.com/r/emacs/comments/3nm0cf/whats_the_best_way_to_sync_emacs_settings_between/) 这一篇，我学习到 [use-package](https://github.com/jwiegley/use-package) 这个插件，能够满足我的要求。\n\n## 链接脚本\n\nGit 仓库中的配置脚本都写好后，下面要写链接脚本。\n\n每次在新设备上，只要执行一次链接脚本，就能自动配置完成。\n\n主要参考以下脚本：\n\n``` bash\n#! /bin/sh\n\nSCRIPT_DIR=\\`pwd\\`\n\ndeclare -a FILES=(\n    \".bash_profile\"\n    \".emacs\"\n)\n\necho \"Goto home $HOME\"\ncd $HOME\n\nfor FILE in \"\\${FILES[@]}\"; do\n    f=\"$SCRIPT_DIR/$FILE\"\n    echo \"File = $f\"\n    ln -s $f\ndone\n\necho \"Install Finish\"\n```\n\n参考来源：[Managing user configuration files across multiple computers](https://stackoverflow.com/questions/1413049/managing-user-configuration-files-across-multiple-computers)"},"path":"post/MultipleDeviceTerminalConfigmd"}
