{"template":"/home/maxiee/Code/Blog/maxiee.github.io/src/pages/post","sharedHashesByProp":{},"data":{"post":{"name":"Android 平台编译 JavaScriptCore 实践","desc":"如何编译在 Android 上用的 JavaScript Core 呢？React 社区提供了一个 jsc-android-buildscripts 项目，专门用于构建编译供 Android 使用的 JavaScriptCore。由于 Hybrid 移动开发技术的发展，编译 JavaScript Core 的过程已经得到了大大简化。","type":"md","link":"CompileJscAndroidmd","create":"2018-12-21","filename":"CompileJscAndroid.md"},"content":"## 介绍\n\n如何编译在 Android 上用的 JavaScript Core 呢？React 社区提供了一个 jsc-android-buildscripts 项目，专门用于构建编译供 Android 使用的 JavaScriptCore。由于 Hybrid 移动开发技术的发展，编译 JavaScript Core 的过程已经得到了大大简化。\n\n项目主页在[这里](https://github.com/react-community/jsc-android-buildscripts)，详细介绍可以参见链接内的介绍。\n\n在本文中记录了我使用 jsc-android-buildscripts 的构建经历。\n\n## 构建\n\nStep1：clone jsc-android-buildscripts 工程。\n\n-   进入工程根目录。\n\nStep2：`npm run clean`，先清理一下工程。\n\nStep3：`npm run download`，下载编译所需的资源。\n\n-   具体执行的是 `scripts/download.sh`。\n-   执行过程中会下载源代码。\n\nStep4：`npm run start`，进行编译。\n\n-   具体执行的是 `scripts/start.sh`。\n-   JavaScriptCore 还依赖了 ICU，因此会首先编译 ICU。\n\n编译完成后，会进入 createAAR 过程，将个平台下的 so 封装到一个 AAR 里面去。\n\n## 遇到的问题\n\n编译过程肯定不会是一帆风顺，肯定会遇到问题，不过，有问题就有原因，找到原因解决即可。编译过程遇到的问题有：\n\n### 问题一：环境变量 `ANDROID_HOME` 和 `ANDROID_NDK` 未指定。\n\n解决方法，添加环境变到到对应的位置。\n\n我发现，编译过程一旦中断，重新运行 `npm run start` 时会从头开始，再次经历漫长的过程。\n\n### 问题二：realpath: command not found\n\n-   参考 [issue 文章](https://github.com/react-community/jsc-android-buildscripts/issues/20)，需要安装 coreutils。\n\n### 问题三：磁盘空间不足\n\n-   编译时我的电脑只剩下不到 2GB 的空间，没想到不够用\n-   编译时需要注意，多留出一些硬盘空间来\n\n08m:42s 后，终于完成了 WebKit 的编译，但是我太天真了，这只是在一个平台上的编译完成，我忘记 Android 有多种平台架构了，估计所有平台编译完得至半个多小时时间……\n\n### 问题四：gradle-4.8-all 下载失败\n\n当 JavaScriptCore 编译完成之后，下一步是生成 aar。在初始化项目的 gradle 的时候，需要联网下载 gradle-4.8-all.\n\n由于国内的网络情况，始终下载出错。\n\n我采取的办法是，在浏览器中下载 [gradle-4.8-all.zip](https://services.gradle.org/distributions/gradle-4.8-all.zip)，并将它拷贝到以下位置：\n\n```\n~/.gradle/wrapper/dists/gradle-4.8-all/41c9mvq2w0645xx6nsenaerjl/gradle-4.8-all.zip\n```\n\n## 彩蛋\n\n在完全编译完成后，脚本还向屏幕中输出一句：\n\n> I am not slacking off, my code is compiling.\n\n哈哈哈，乐死我了。\n\n## 现成的二进制\n\n其实 jsc-android-buildscripts 已经对外提供了编译好的二进制，如果我们只想拿来用的话，无需自己编译，直接拿过来用就可以。\n\n二进制作为一个 npm 库提供出来，这个库装在本地后，实际上是一个本地 Maven 库。\n\n## 结论\n\n最终，我们成功打出了 JavaScriptCore 的 Android AAR 包。编译过程至此就告一段落了，下一步考虑如何在 Android 工程中使用 JavaScriptCore。\n\n"},"path":"post/CompileJscAndroidmd"}
