{"template":"/home/maxiee/Code/Blog/maxiee.github.io/src/pages/post","sharedHashesByProp":{},"data":{"post":{"name":"React Navigation 带自定义按钮的底部导航栏","desc":"React Navigation 是 React Native 开发中常用的导航库，它默认提供了多种底部导航栏实现。目前流行一种在中间加按钮的样式，需要通过自定义组件来实现，在本文中介绍实现方法。","type":"md","link":"ReactNavigationCustomNaviHeartBeatmd","create":"2019-03-04","filename":"ReactNavigationCustomNaviHeartBeat.md"},"content":"## 前言\n\nReact Navigation 是 React Native 开发中常用的导航库，它默认提供了多种底部导航栏实现。目前流行一种在中间加按钮的样式，需要通过自定义组件来实现，在本文中介绍实现方法。\n\n前面我曾翻译过一篇[React Navigation 自定义 Tab Bar（翻译）](https://maxiee.github.io/post/ReactNavigationCustomTabBar.md/)，它偏重于讲解 React Navigation，而本文偏重于讲解布局原理，两篇可以结合起来看。\n\n本文的代码实现位于 [GitHub 地址](https://github.com/maxiee/MaxieeRNLab/blob/master/src/demo/NavigationDemo/Custom/BottomNavigation/HeartBeatBottomNavi/index.js)。[MaxieeRNLab](https://github.com/maxiee/MaxieeRNLab) 是我创建的一个用于展示 React Native 各种功能开发方法的综合性展示项目，除了本文的功能外还包含方方面面的功能演示，欢迎 Star！\n\n首先让我们先看下实现效果：\n\n![](image/HeartNavi1.png)\n\n## 层次划分\n\n我们先从布局入手，上图中这个最终实现，我们该如何进行布局呢？\n\n首先整体上分为两层：\n\n![](image/HeartNavi2.png)\n\n这样，我们可以使用一个大容器，来装裹这两层：\n\n![](image/HeartNavi3.png)\n\n## 层次布局实现\n\n如何实现上一节中的层次布局呢？整体的视图结构如下：\n\n```jsx\n<View style={[styles.container, style]}>\n    <View style={styles.tabbarContainer}>\n        {tabBarButtons}\n    </View>\n    <View style={styles.circleButton}>\n        <Icon name=\"ios-add\" \n            size={36} \n            color=\"white\"\n            />\n    </View>\n</View>\n```\n\n其中，相关的样式如下：\n\n```js\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: HEIGHT_CIRCLE\n    },\n    tabbarContainer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        borderTopWidth: 0.5,\n        height: HEIGHT_TABBAR,\n        flex: 1,\n        justifyContent: 'space-evenly',\n        flexDirection: 'row',\n        borderTopColor: \"#CCCCCC\",\n    },\n    circleButton: {\n        width: HEIGHT_CIRCLE,\n        height: HEIGHT_CIRCLE,\n        position: 'absolute',\n        bottom: 4,\n        borderRadius: HEIGHT_CIRCLE/2,\n        backgroundColor: 'pink',\n        borderWidth: 0.5,\n        borderColor: 'white',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n```\n\n其中:\n\n- container 是总容器\n- tabbarContainer 是 Tabbar 容器\n- circleButton 是原型按钮容器\n- tabbarContainer 和 circleButton 均使用 'absolute' position，来实现在父容器中的摆放\n\n## Tab 按钮\n\n在上一节的代码中，tabBarButtons 是一个数组表示 Tab 按钮，本节中我们来看如何创建 Tab 按钮。\n\n实现的代码如下：\n\n```jsx\nconst { navigation, style } = this.props;\nlet tabBarButtons = navigation.state.routes.map(this.renderTabButton.bind(this));\n\ntabBarButtons.splice(2, 0, \n    <View key=\"circle-space\" \n        style={{ \n            width: HEIGHT_CIRCLE * 0.8,\n        }} />)\n```\n\n其中：\n\n- `navigation.state.routes` 表示外界定义的路由表，我们通过 map 操作，将其映射为 Tab 按钮组件（具体按钮创建在 renderTabButton 中，里面都是普通的布局操作，这里不再赘述）\n- 之后，我们又人为地把圆形视图插入到指定位置，需要注意的是，**这里的圆形视图的作用仅仅是占位**，圆形按钮实际上是在另一个层次中定义的，这里只是先把空间占据。\n\n这样就完成了对 TabBar 容器的填充。\n\n## 完整代码实现\n\n本文的代码实现位于 [GitHub 地址](https://github.com/maxiee/MaxieeRNLab/blob/master/src/demo/NavigationDemo/Custom/BottomNavigation/HeartBeatBottomNavi/index.js)。\n\n[MaxieeRNLab](https://github.com/maxiee/MaxieeRNLab) 是我创建的一个用于展示 React Native 各种功能开发方法的综合性展示项目，除了本文的功能外还包含方方面面的功能演示。\n\n这个项目目前刚刚起步当中，我的计划是将我的 React Native 开发技能，都结构化地沉淀到这个项目中。\n\n欢迎 Star！\n\n## 结论\n\n至此，我们就完成了带自定义按钮的底部导航栏的实现。\n\n可以看出，只要对 React Native 的 FlexBox 布局比较熟悉，并且稍微看一下 React Navigation 提供的 API，就能很方便地将它实现。\n\n"},"path":"post/ReactNavigationCustomNaviHeartBeatmd"}
