{"template":"/home/maxiee/Code/Blog/maxiee.github.io/src/pages/post","sharedHashesByProp":{},"data":{"post":{"name":"用 react-syntax-highlighter 给 React 添加代码高亮","desc":"maxiee.github.io 有代码高亮啦~","type":"md","link":"ReactSyntaxHighlightermd","create":"2018-10-27","filename":"ReactSyntaxHighlighter.md"},"content":"## 介绍\n\nreact-syntax-highlighter 是一个 React 的代码高亮组件，[项目地址](https://github.com/conorhastings/react-syntax-highlighter)。\n\n相较于其它代码高亮库的优势：\n\n- 其它的高亮库实现原理是通过 dangerouslySetInnerHTML 或者手动修改 DOM\n- 这个库是通过一个语法树动态构建 Virtual DOM\n- 因此与 React 的思想结合地更好\n\n同时，代码样式默认是用 JavaScript Styles 定义的，没有使用 css（也支持切换到使用 CSS 的形式）。\n\n## Props\n\n组件支持的 Props 如下：\n\n|名称|说明|\n|---|---|\n|language|语言名称，定义根据选用的高亮后端有所不同|\n|children|需要高亮的代码|\n|showLineNumbers|是否显示行号|\n|startingLineNumber|起始行号|\n|wrapLines|超长代码是否折行|\n\n上面只包含了一部分常用的，完整地参考项目文档。\n\n## 封装\n\n这个库对外提供一个 SyntaxHighlighter 组件，我打算在这个组件外面再包一层，\n原因是把相关的配置项封装在内部，这样外面调用的时候会简化很多。\n\n代码如下(Code.js)：\n\n``` jsx\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/prism-async-light';\nimport {base16AteliersulphurpoolLight as theme} from 'react-syntax-highlighter/styles/prism'\n\nexport class Code extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <SyntaxHighlighter showLineNumbers={true}\n                                  language={this.props.lang} \n                                  style={theme}>\n                    {this.props.children.replace(/^\\s+|\\s+$/g, '')}\n               </SyntaxHighlighter>\n    }\n}\n```\n\n在使用的时候代码如下：\n\n``` jsx\n<Code lang='jsx'>{`\nlet codeInsertScript = <Code lang=\"js\">{\\`\n(function(d) {\n    var wfAD = d.createElement('script'), sAD = d.scripts[0];\n    wfAD.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n    wfAD.async = true;\n    sAD.parentNode.insertBefore(wfAD, sAD);\n})(document);\n\\`}</Code>\n`}</Code>\n```\n\n## 懒加载\n\n这个库说是支持分包懒加载，由于文档写得并不清楚，不知道 registerLanguage 具体的内部机制是什么。\n\n要弄明白这个的话，需要深入到库的内部实现原理中，由于时间精力有限，这个研究就暂放了。\n\n感兴趣的同学可以深入挖掘一下。"},"path":"post/ReactSyntaxHighlightermd"}
